"""
Django settings for odl_video project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from urllib.parse import urljoin
import dj_database_url

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

SECRETS_DIR = os.environ.get('SECRETS_DIR', '/run/secrets/')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY_FILE = os.path.join(SECRETS_DIR, "django-secret-key")
if os.path.isfile(SECRET_KEY_FILE):
    with open(SECRET_KEY_FILE, 'rb') as keyfile:
        SECRET_KEY = keyfile.read()
else:
    SECRET_KEY = os.environ.get(
        'DJANGO_SECRET_KEY',
        'ls8t)o32h@bqp1s8e0&6+mepk#t4@^68yx43kjm_#tvdv=m&ke',
    )

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'ui.apps.UIConfig',
    'cloudsync.apps.CloudSyncConfig',
    'dj_elastictranscoder',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID', '')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY', '')
AWS_REGION = os.environ.get('AWS_REGION', '')
AWS_S3_DOMAIN = os.environ.get('AWS_S3_DOMAIN', 's3.amazonaws.com')

if os.environ.get('USE_SHIBBOLETH', '') == 'True':
    # TOUCHSTONE
    MIDDLEWARE.append('shibboleth.middleware.ShibbolethRemoteUserMiddleware')
    SHIBBOLETH_ATTRIBUTE_MAP = {
        "EPPN": (True, "username"),
        "MAIL": (True, "email"),
        # full name is in the "DISPLAY_NAME" header,
        # but no way to parse that into first_name and last_name...
    }
    AUTHENTICATION_BACKENDS = [
        'shibboleth.backends.ShibbolethRemoteUserBackend',
    ]
    LOGIN_URL = "/Shibboleth.sso/Login"
else:
    LOGIN_URL = "/login/"

ROOT_URLCONF = 'odl_video.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'odl_video.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

SQLITE_FILE = "sqlite:///" + os.path.join(BASE_DIR, 'db.sqlite3')
DATABASES = {
    'default': dj_database_url.config(default=SQLITE_FILE),
}


# Celery
# http://docs.celeryproject.org/en/latest/django/first-steps-with-django.html

CELERY_BROKER_URL = os.environ.get("REDIS_URL")
CELERY_RESULT_BACKEND = CELERY_BROKER_URL


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
CLOUDFRONT_DIST = os.environ.get('STATIC_CLOUDFRONT_DIST')
if CLOUDFRONT_DIST:
    STATIC_URL = urljoin('https://{dist}.cloudfront.net'.format(dist=CLOUDFRONT_DIST), STATIC_URL)
    AWS_S3_CUSTOM_DOMAIN = '{dist}.cloudfront.net'.format(dist=CLOUDFRONT_DIST)

STATIC_ROOT = 'staticfiles'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# OTHER
LOGIN_REDIRECT_URL = "/"

# AWS ElasticTranscoder
ET_PIPELINE_ID = os.environ.get('ET_PIPELINE_ID', '')
ET_PRESET_IDS = os.environ.get('ET_PRESET_IDS',
                               '1351620000001-200015,1351620000001-200035,1351620000001-200055').split(',')

VIDEO_CLOUDFRONT_DIST = os.environ.get('VIDEO_CLOUDFRONT_DIST', '')
VIDEO_S3_BUCKET = os.environ.get('VIDEO_S3_BUCKET', 'odl-video-service')
VIDEO_S3_TRANSCODE_BUCKET = os.environ.get('VIDEO_S3_TRANSCODE_BUCKET', '{}_transcoded'.format(VIDEO_S3_BUCKET))
VIDEO_S3_THUMBNAIL_BUCKET = os.environ.get('VIDEO_S3_THUMBNAIL_BUCKET', '{}_thumbnails'.format(VIDEO_S3_BUCKET))
